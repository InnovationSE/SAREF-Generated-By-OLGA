/**
* This file is automatically generated by OLGA
* @author OLGA
* @version 1.0
*/
package w3id.org.saref;

import saref.global.util.GLOBAL;

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.vocabulary.RDF;

import java.math.BigDecimal;
import javax.xml.datatype.XMLGregorianCalendar;
import java.util.Date;


import w3id.org.saref.ITime;  
import w3id.org.saref.IProperty;  
import w3id.org.saref.ICommodity;  
import w3id.org.saref.IPrice;  
import w3id.org.saref.IProfile;  
	


public  class Profile implements IProfile {

	IRI newInstance;
	
	public Profile(String namespace, String instanceId) {
		super();
		newInstance = GLOBAL.factory.createIRI(namespace, instanceId);
		GLOBAL.model.add(newInstance, RDF.TYPE, GLOBAL.factory.createIRI("https://w3id.org/saref#Profile"));
	}

	public IRI iri()
	{
		return newInstance;
	}

	
	public void addHastime_Only(ITime parameter)
	{
		GLOBAL.model.add(newInstance, GLOBAL.factory.createIRI("https://w3id.org/saref#hasTime"), parameter.iri());
	}
	public void addIsabout_Only(IProperty parameter)
	{
		GLOBAL.model.add(newInstance, GLOBAL.factory.createIRI("https://w3id.org/saref#isAbout"), parameter.iri());
	}
	public void addIsabout_Only(ICommodity parameter)
	{
		GLOBAL.model.add(newInstance, GLOBAL.factory.createIRI("https://w3id.org/saref#isAbout"), parameter.iri());
	}
	public void addHasprice_Only(IPrice parameter)
	{
		GLOBAL.model.add(newInstance, GLOBAL.factory.createIRI("https://w3id.org/saref#hasPrice"), parameter.iri());
	}
	public void addConsistsof_Only(IProfile parameter)
	{
		GLOBAL.model.add(newInstance, GLOBAL.factory.createIRI("https://w3id.org/saref#consistsOf"), parameter.iri());
	}
	
}
