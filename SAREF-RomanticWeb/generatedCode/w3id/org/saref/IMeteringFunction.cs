///<summary> 
/// This file is automatically generated by OLGA
/// author OLGA
/// version 1.0 
///</summary> 

using RomanticWeb.Entities;
using RomanticWeb.Mapping.Attributes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Reflection;
using static System.Net.WebRequestMethods;

using w3id.org.saref;  
namespace w3id.org.saref
{
    [Class("https://w3id.org/saref#MeteringFunction")]
    public interface IMeteringFunction  : IFunction
    {
	  ///<summary> function AddHascommand_Only_GetCurrentMeterValueCommand</summary>  
	  ///<param name="IGetCurrentMeterValueCommand"></param>
      [Collection("https://w3id.org/saref#hasCommand")]
	  ICollection<IGetCurrentMeterValueCommand> AddHascommand_Only_GetCurrentMeterValueCommand { get; set; }
	
	  ///<summary> function AddHascommand_Only_GetMeterDataCommand</summary>  
	  ///<param name="IGetMeterDataCommand"></param>
      [Collection("https://w3id.org/saref#hasCommand")]
	  ICollection<IGetMeterDataCommand> AddHascommand_Only_GetMeterDataCommand { get; set; }
	
	  ///<summary> function AddHascommand_Only_GetMeterHistoryCommand</summary>  
	  ///<param name="IGetMeterHistoryCommand"></param>
      [Collection("https://w3id.org/saref#hasCommand")]
	  ICollection<IGetMeterHistoryCommand> AddHascommand_Only_GetMeterHistoryCommand { get; set; }
	
	  ///<summary> function AddHasmeterreadingtype_Only_Property</summary>  
	  ///<param name="IProperty"></param>
      [Collection("https://w3id.org/saref#hasMeterReadingType")]
	  ICollection<IProperty> AddHasmeterreadingtype_Only_Property { get; set; }
	
	  ///<summary> function AddHasmeterreadingtype_Only_Commodity</summary>  
	  ///<param name="ICommodity"></param>
      [Collection("https://w3id.org/saref#hasMeterReadingType")]
	  ICollection<ICommodity> AddHasmeterreadingtype_Only_Commodity { get; set; }
	
	  ///<summary> function AddHasmeterreading_Only_Measurement</summary>  
	  ///<param name="IMeasurement"></param>
      [Collection("https://w3id.org/saref#hasMeterReading")]
	  ICollection<IMeasurement> AddHasmeterreading_Only_Measurement { get; set; }
	
	}
}